module.exports = {
  ignorePatterns: [
    '**/charting_library/**',
    '**/node_modules/**',
    '**/build/**',
    '**/vite.config.ts',
  ],
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    'plugin:react/recommended',
    'plugin:prettier/recommended',
    'plugin:react-hooks/recommended',
    'airbnb',
    'prettier',
    'eslint-config-prettier',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 12,
    sourceType: 'module',
  },
  plugins: ['react', 'prettier', '@typescript-eslint'],
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
        paths: ['src', 'e2e/frontend-admin/cypress/support'],
      },
    },
  },

  rules: {
    'react/jsx-filename-extension': [
      2,
      { extensions: ['.js', '.jsx', '.ts', '.tsx'] },
    ],
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
        mjs: 'never',
      },
    ],
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['error'],
    'jsx-a11y/label-has-associated-control': 'off',
    'jsx-a11y/control-has-associated-label': 'off',
    'jsx-a11y/no-static-element-interactions': 'off',
    'no-underscore-dangle': ['error', { allowAfterThis: true }],
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': [
      'warn',
      {
        argsIgnorePattern: '^_',
        varsIgnorePattern: '^_',
        caughtErrorsIgnorePattern: '^_',
      },
    ],
    'prettier/prettier': ['error', { singleQuote: true }],
    'import/prefer-default-export': 'off',
    'import/newline-after-import': 'error',
    'jsx-a11y/anchor-is-valid': 'off',
    'react/self-closing-comp': 'error',
    'react/jsx-props-no-spreading': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/no-noninteractive-element-interactions': 'off',
    'react/require-default-props': 'off',
    'react/react-in-jsx-scope': 'off',
    'prefer-const': 'off',
    'import/no-unresolved': 'off',
    'import/no-useless-path-segments': 'off',
    'react/prop-types': 'off',
    'no-fallthrough': 'off',
    'no-debugger': 'error',
    'spaced-comment': 'error',
    'import/no-relative-parent-imports': 'off',
    // Restricting absolute imports - do not disable this rule
    // Fix your IDE to use absolute imports
    'no-restricted-imports': 'off',
    'no-param-reassign': [
      'error',
      { props: true, ignorePropertyModificationsFor: ['state'] },
    ],
    'react/jsx-boolean-value': 'off',
    'array-callback-return': 'error',
    'no-restricted-syntax': 'off',
    'jsx-a11y/alt-text': 'off',
    'react/button-has-type': 'off',
    'no-alert': 'off',
    'react/no-danger': 'off',
    'no-unneeded-ternary': 'off',
    'no-else-return': 'off',
    'prefer-template': 'off',
    'dot-notation': 'off',
    'react/destructuring-assignment': 'off',
    'one-var': 'off',
    'react/jsx-curly-brace-presence': 'off',
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': 'error',
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: [
          'vite.config.ts',
          '**/*.test.{js,ts,tsx}',
          '**/testUtils.{js,ts,tsx}',
          '**/setupTests.{js,ts,tsx}',
        ],
      },
    ],
    'import/order': [
      'error',
      {
        groups: [
          'external',
          'builtin',
          'internal',
          'sibling',
          'parent',
          'index',
        ],
        pathGroups: [
          {
            pattern: 'src/**',
            group: 'internal',
          },
          {
            pattern: 'src',
            group: 'internal',
          },
        ],
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
          caseInsensitive: true,
        },
      },
    ],
  },
  globals: {
    JSX: true,
    test: true,
    expect: true,
    jest: true,
    describe: true,
    cy: true,
    beforeEach: true,
    it: true,
    Cypress: true,
    context: true,
  },
};
